/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ambiente.Caminhao;
import controller.ambiente.Container;
import controller.ambiente.Navio;
import controller.ambiente.PilhaContainer;
import java.awt.Color;
import java.awt.GridBagConstraints;
import java.util.Iterator;
import java.util.Stack;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Lucas
 */
public class PatioView extends javax.swing.JFrame {

    DefaultListModel<String> filaCaminhoesVector = new DefaultListModel<>();

    /**
     * Creates new form Patio
     */
    public PatioView() {
        initComponents();
        this.setLocationRelativeTo(null);
        setAlwaysOnTop(true);
        filaCaminhoesJList.setModel(filaCaminhoesVector);
        DefaultListCellRenderer renderer = (DefaultListCellRenderer) filaCaminhoesJList.getCellRenderer();
        renderer.setHorizontalAlignment(JLabel.CENTER);
//        JPanel panel = this.getJPanelPilha01();
//        GridBagConstraints c = new GridBagConstraints();
//        c.fill = GridBagConstraints.VERTICAL;
//        c.gridx = 0;
//        c.gridy = 0;
//        JLabel label = new JLabel("Teste");
//
//        panel.add(label, c);
//        c = new GridBagConstraints();
//        c.fill = GridBagConstraints.VERTICAL;
//        c.gridx = 0;
//        c.gridy = 1;
//        label = new JLabel("Teste");
//
//        panel.add(label, c);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelAgua = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        JPanelAsfalto = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        filaCaminhoesJList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldGate = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldReachStacker = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanelPilha01 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanelPilha02 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabelTick = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldNavio = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanelAgua.setBackground(new java.awt.Color(33, 100, 163));
        jPanelAgua.setMaximumSize(new java.awt.Dimension(800, 100));
        jPanelAgua.setMinimumSize(new java.awt.Dimension(800, 100));
        jPanelAgua.setPreferredSize(new java.awt.Dimension(800, 100));
        jPanelAgua.setLayout(new java.awt.GridBagLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/water.gif"))); // NOI18N
        jLabel3.setToolTipText("");
        jLabel3.setMaximumSize(new java.awt.Dimension(800, 100));
        jLabel3.setMinimumSize(new java.awt.Dimension(800, 100));
        jLabel3.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        jPanelAgua.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanelAgua, gridBagConstraints);

        JPanelAsfalto.setBackground(new java.awt.Color(51, 51, 51));
        JPanelAsfalto.setMaximumSize(new java.awt.Dimension(800, 600));
        JPanelAsfalto.setMinimumSize(new java.awt.Dimension(800, 400));
        JPanelAsfalto.setPreferredSize(new java.awt.Dimension(600, 400));
        JPanelAsfalto.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setToolTipText("");
        jPanel1.setPreferredSize(new java.awt.Dimension(100, 350));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Fila");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel1, gridBagConstraints);

        jScrollPane1.setViewportView(filaCaminhoesJList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Gate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel2, gridBagConstraints);

        jTextFieldGate.setEditable(false);
        jTextFieldGate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldGate.setText("LIVRE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jTextFieldGate, gridBagConstraints);

        JPanelAsfalto.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, -1, -1));

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Reach Stacker");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel4, gridBagConstraints);

        jTextFieldReachStacker.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldReachStacker.setText("LIVRE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextFieldReachStacker, gridBagConstraints);

        JPanelAsfalto.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 140, 40));

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Pilha 01");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel5, gridBagConstraints);

        jPanelPilha01.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jPanel3.add(jPanelPilha01, gridBagConstraints);

        JPanelAsfalto.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 320, 190));

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Pilha 02");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jLabel6, gridBagConstraints);

        jPanelPilha02.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jPanel4.add(jPanelPilha02, gridBagConstraints);

        JPanelAsfalto.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, 300, 190));

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabelTick.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelTick.setForeground(new java.awt.Color(153, 0, 0));
        jLabelTick.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTick.setText("Tick: 0");
        jPanel5.add(jLabelTick, new java.awt.GridBagConstraints());

        JPanelAsfalto.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 30));

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jLabel9.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Proximo navio");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jLabel9, gridBagConstraints);

        jTextFieldNavio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldNavio.setText("Nenhum");
        jTextFieldNavio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNavioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jTextFieldNavio, gridBagConstraints);

        JPanelAsfalto.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 50, 180, 40));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        getContentPane().add(JPanelAsfalto, gridBagConstraints);

        jPanel6.setBackground(new java.awt.Color(102, 102, 102));
        jPanel6.setOpaque(false);
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/truck-vazio.png"))); // NOI18N
        jPanel6.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, -1, -1));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/road.jpg"))); // NOI18N
        jLabel7.setText("\n");
        jPanel6.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(-30, 30, 830, -1));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        getContentPane().add(jPanel6, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNavioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNavioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNavioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatioView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatioView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatioView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatioView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatioView().setVisible(true);
            }
        });
    }

    public synchronized boolean addCaminhaoFila(Caminhao caminhao) {
        try {
            this.filaCaminhoesVector.addElement(caminhao.getPlaca());
            this.revalidate();
            this.repaint();
            return true;
        } catch (Exception ex) {
            return false;
        }
    }

    public boolean removerCaminhaoFila(Caminhao caminhao) {
        try {
            this.filaCaminhoesVector.removeElement(caminhao.getPlaca());
            this.revalidate();
            this.repaint();
            return true;
        } catch (Exception ex) {
            return false;
        }
    }

    public boolean setCaminhaoGate(Caminhao caminhao) {
        try {
            if (caminhao == null) {
                getJTextFieldGate().setText("LIVRE");
            } else {
                getJTextFieldGate().setText(caminhao.getPlaca());
            }
            this.revalidate();
            this.repaint();
            return true;
        } catch (Exception ex) {
            return false;
        }
    }

    public synchronized boolean setCaminhaoReachStacker(Caminhao caminhao) {
        try {
            if (caminhao == null) {
                getJTextFieldReachStacker().setText("LIVRE");
            } else {
                getJTextFieldReachStacker().setText(caminhao.getPlaca());
            }
            this.revalidate();
            this.repaint();
            return true;
        } catch (Exception ex) {
            return false;
        }
    }

    public synchronized boolean setNavio(Navio navio) {
        try {
            if (navio == null) {
                getJTextFieldNavio().setText("Nenhum");
            } else {
                getJTextFieldNavio().setText(navio.getNomeNavio());
            }
            this.revalidate();
            this.repaint();
            return true;
        } catch (Exception ex) {
            return false;
        }
    }

    public synchronized boolean drawPilha01(PilhaContainer pilha) {
        try {
            JPanel panel = this.getJPanelPilha01();
            panel.removeAll();
            for (int i = 0; i < pilha.getWidth(); i++) {
                for (int j = 0; j < pilha.getHeight(); j++) {
                    Stack<Container> p = pilha.getPilha()[i][j];
                    Container container = null;

                    if (p.size() > 0) {
                        container = p.peek();
                    }

                    GridBagConstraints c = new GridBagConstraints();
                    c.fill = GridBagConstraints.BOTH;
                    c.gridx = i;
                    c.gridy = j;
                    c.weightx = 1;
                    c.weighty = 1;
                    c.insets.bottom = 1;
                    c.insets.left = 1;
                    c.insets.right = 1;
                    c.insets.top = 1;
                    JLabel label = new JLabel("Vazio");
                    label.setHorizontalAlignment(JLabel.CENTER);
                    if (container != null) {
                        label.setText(p.size() + "");
                        String tooltip = "";
                        for (Iterator<Container> iterator = p.iterator(); iterator.hasNext();) {
                            Container next = iterator.next();
                            tooltip = next.getNumeracao() + "<br/>" + tooltip;
                        }
                        label.setToolTipText("<html><p>" + tooltip + "</p></html>");
                        label.setBackground(container.getCor());
                        label.setOpaque(true);
                        if (container.getCor().getRGB() == Color.WHITE.getRGB()
                                || container.getCor().getRGB() == Color.YELLOW.getRGB()
                                || container.getCor().getRGB() == Color.CYAN.getRGB()
                                || container.getCor().getRGB() == Color.GREEN.getRGB()) {
                            label.setForeground(Color.BLACK);
                        } else {
                            label.setForeground(Color.WHITE);
                        }
                    }

                    panel.add(label, c);
                }
            }

            panel.revalidate();
            panel.repaint();
            return true;
        } catch (Exception ex) {
            System.err.println(ex.getMessage());
            return false;
        }
    }

    public synchronized boolean drawPilha02(PilhaContainer pilha) {
        try {
            JPanel panel = this.getJPanelPilha02();
            panel.removeAll();
            for (int i = 0; i < pilha.getWidth(); i++) {
                for (int j = 0; j < pilha.getHeight(); j++) {
                    Stack<Container> p = pilha.getPilha()[i][j];
                    Container container = null;

                    if (p.size() > 0) {
                        container = p.peek();
                    }

                    GridBagConstraints c = new GridBagConstraints();
                    c.fill = GridBagConstraints.BOTH;
                    c.gridx = i;
                    c.gridy = j;
                    c.weightx = 1;
                    c.weighty = 1;
                    c.insets.bottom = 1;
                    c.insets.left = 1;
                    c.insets.right = 1;
                    c.insets.top = 1;
                    JLabel label = new JLabel("Vazio");
                    label.setHorizontalAlignment(JLabel.CENTER);
                    if (container != null) {
                        label.setText(p.size() + "");
                        String tooltip = "";
                        for (Iterator<Container> iterator = p.iterator(); iterator.hasNext();) {
                            Container next = iterator.next();
                            tooltip = next.getNumeracao() + "<br/>" + tooltip;
                        }
                        label.setToolTipText("<html><p>" + tooltip + "</p></html>");
                        label.setBackground(container.getCor());
                        label.setOpaque(true);
                        if (container.getCor().getRGB() == Color.WHITE.getRGB()
                                || container.getCor().getRGB() == Color.YELLOW.getRGB()
                                || container.getCor().getRGB() == Color.CYAN.getRGB()
                                || container.getCor().getRGB() == Color.GREEN.getRGB()) {
                            label.setForeground(Color.BLACK);
                        } else {
                            label.setForeground(Color.WHITE);
                        }
                    }

                    panel.add(label, c);
                }
            }

            panel.revalidate();
            panel.repaint();
            return true;
        } catch (Exception ex) {
            System.err.println(ex.getMessage());
            return false;
        }
    }

//    private void updateGateList() {
//        DefaultListModel model = new DefaultListModel();
//        for (int i = 0; i < filaCaminhoesVector.size(); i++) {
//            String item = filaCaminhoesVector.get(i);
//            model.addElement(item);
//        }
//        model.no filaCaminhoesJList
//        .setModel(model);
//    }
    public JPanel getJPanelPilha01() {
        return jPanelPilha01;
    }

    public JPanel getJPanelPilha02() {
        return jPanelPilha02;
    }

    public synchronized boolean setTick(int tick) {
        try {
            getJLabelTick().setText("Tick: " + tick);

            return true;
        } catch (Exception ex) {
            System.err.println(ex.getMessage());
            return false;
        }
    }

    public JLabel getJLabelTick() {
        return jLabelTick;
    }

    public JList<String> getFilaCaminhoesJList() {
        return filaCaminhoesJList;
    }

    public JTextField getJTextFieldNavio() {
        return jTextFieldNavio;
    }

    public JTextField getJTextFieldReachStacker() {
        return jTextFieldReachStacker;
    }

    public JTextField getJTextFieldGate() {
        return jTextFieldGate;
    }

    public JPanel getJPanelAsfalto() {
        return JPanelAsfalto;
    }

//    public JPanel getjPanelPosicaoGateIN() {
//        return jPanelPosicaoGateIN;
//    }
//    public JPanel getjPanelPosicaoGateOUT() {
//        return jPanelPosicaoGateOUT;
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanelAsfalto;
    private javax.swing.JList<String> filaCaminhoesJList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelTick;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanelAgua;
    private javax.swing.JPanel jPanelPilha01;
    private javax.swing.JPanel jPanelPilha02;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldGate;
    private javax.swing.JTextField jTextFieldNavio;
    private javax.swing.JTextField jTextFieldReachStacker;
    // End of variables declaration//GEN-END:variables
}
